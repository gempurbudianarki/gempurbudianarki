# Nama Workflow kita, akan muncul di tab "Actions" di GitHub
name: Live Vulnerability Assessment

# Pemicu (Trigger): Kapan workflow ini harus berjalan?
on:
  issues:
    types: [opened] # Berjalan setiap kali ada issue baru yang dibuka

# Daftar pekerjaan (Jobs) yang harus dilakukan
jobs:
  run_assessment:
    # Hanya jalankan job ini jika judul issue diawali dengan "VA:"
    if: startsWith(github.event.issue.title, 'VA:')
    
    # Menentukan jenis mesin virtual yang akan digunakan
    runs-on: ubuntu-latest
    
    # Langkah-langkah (Steps) yang akan dieksekusi secara berurutan
    steps:
      # Langkah 1: "Checkout" atau mengunduh kode dari repo lo ke mesin virtual
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Langkah 2: Menyiapkan lingkungan Python versi 3.9
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      # Langkah 3: Meng-install library Python yang dibutuhkan oleh script kita
      - name: Install Dependencies
        run: pip install PyGithub PyYAML

      # Langkah 4: Mengeksekusi script "Sutradara" kita
      - name: Run Simulation Script
        env:
          # Memberikan "kunci rahasia" agar script kita bisa mengedit repo
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Memberitahu script kita nomor issue yang memicunya
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          # Memberitahu script kita path repo-nya (contoh: gempurbudianarki/gempurbudianarki)
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: python simulation/simulation_main.py

      # Langkah 5: Menyimpan perubahan (README.md baru) kembali ke repo lo
      - name: Commit and Push Changes
        run: |
          git config --global user.name "VA Bot"
          git config --global user.email "bot@github.actions"
          git add README.md simulation/assessment_state.p
          # Cek apakah ada perubahan sebelum mencoba commit
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "VA Simulation Updated by ${{ github.event.issue.user.login }}"
            git push
          fi